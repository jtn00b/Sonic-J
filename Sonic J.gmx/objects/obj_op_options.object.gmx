<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if os_type == os_windows{
fullscreen_on = scr_op_option_create("ON", global.Window_X-121, 83, 0, 1, 0);
fullscreen_off = scr_op_option_create("OFF", global.Window_X-46, 83, 1, 1, 1);
}else if os_type == os_android{
screen_adapting_on = scr_op_option_create("ON", global.Window_X-121, 83, 0, 1, 6);
screen_adapting_off = scr_op_option_create("OFF", global.Window_X-46, 83, 1, 1, 7);
}
vsync_on = scr_op_option_create("ON", global.Window_X-121, 101, 0, 2, 2);
vsync_off = scr_op_option_create("OFF", global.Window_X-46, 101, 1, 2, 3);
fps_on = scr_op_option_create("ON", global.Window_X-121, 164, 0, 3, 4);
fps_off = scr_op_option_create("OFF", global.Window_X-46, 164, 1, 3, 5);

back = scr_op_option_create("BACK", 45, 226, 0, 0, 999);
reset = scr_op_option_create("RESET", 120, 226, 1, 0, 999);

_up = global.key_u;
_down = global.key_d;
_left = global.key_l;
_right = global.key_r;
_jump = global.key_a;
_back = global.key_b;
__delete = global.key_del;
__start = global.key_s;
_screen_adapting = global.screen_adapting;
_vsync = global.vsync;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_main_menu_controller.prev_category != obj_main_menu_controller.op_category{
    instance_destroy(obj_op_option_parent);
    back = scr_op_option_create("BACK", 45, 226, 0, 0, 999);
    reset = scr_op_option_create("RESET", 120, 226, 1, 0, 999);
    switch obj_main_menu_controller.op_category{
        case 0:
            if os_type == os_windows{
            fullscreen_on = scr_op_option_create("ON", global.Window_X-121, 83, 0, 1, 0);
            fullscreen_on.on = window_get_fullscreen();
            fullscreen_off = scr_op_option_create("OFF", global.Window_X-46, 83, 1, 1, 1);
            fullscreen_off.on = !window_get_fullscreen();
            }else if os_type == os_android{
            screen_adapting_on = scr_op_option_create("ON", global.Window_X-121, 83, 0, 1, 6);
            screen_adapting_on.on = global.screen_adapting;
            screen_adapting_off = scr_op_option_create("OFF", global.Window_X-46, 83, 1, 1, 7);
            screen_adapting_off.on = !global.screen_adapting;
            }
            vsync_on = scr_op_option_create("ON", global.Window_X-121, 101, 0, 2, 2);
            vsync_on.on = global.vsync;
            vsync_off = scr_op_option_create("OFF", global.Window_X-46, 101, 1, 2, 3);
            vsync_off.on = !global.vsync;
            fps_on = scr_op_option_create("ON", global.Window_X-121, 164, 0, 3, 4);
            fps_on.on = global.show_fps;
            fps_off = scr_op_option_create("OFF", global.Window_X-46, 164, 1, 3, 5);
            fps_off.on = !global.show_fps;
            break;
        case 1:
            hud_original = scr_op_option_create("ORIGINAL", global.Window_X-121, 83, 0, 1, 8);
            hud_original.on = global.hud_new;
            hud_classic = scr_op_option_create("CLASSIC", global.Window_X-46, 83, 1, 1, 9);
            hud_classic.on = !global.hud_new;
            camera_static = scr_op_option_create("STATIC", global.Window_X-121, 101, 0, 2, 10);
            camera_static.on = !global.camera_old;
            camera_old = scr_op_option_create("OLD", global.Window_X-46, 101, 1, 2, 11);
            camera_old.on = global.camera_old;
            mz_on = scr_op_option_create("ON", global.Window_X-121, 164, 0, 3, 12);
            mz_on.on = global.motorola_shader;
            mz_off = scr_op_option_create("OFF", global.Window_X-46, 164, 1, 3, 13);
            mz_off.on = !global.motorola_shader;
            break;
        case 2:
            if os_type == os_windows{
            up = scr_op_option_create(scr_keycode_to_keyname(global.key_u), 45, 83, 0, 1, -1);
            down = scr_op_option_create(scr_keycode_to_keyname(global.key_d), 45, 101, 0, 2, -2)
            left = scr_op_option_create(scr_keycode_to_keyname(global.key_l), 45, 119, 0, 3, -3);
            right = scr_op_option_create(scr_keycode_to_keyname(global.key_r), 45, 137, 0, 4, -4);
            jump = scr_op_option_create(scr_keycode_to_keyname(global.key_a), 247, 83, 1, 1, -5);
            back = scr_op_option_create(scr_keycode_to_keyname(global.key_b), 247, 101, 1, 2, -6)
            _delete = scr_op_option_create(scr_keycode_to_keyname(global.key_del), 247, 119, 1, 3, -7);
            start = scr_op_option_create(scr_keycode_to_keyname(global.key_s), 247, 137, 1, 4, -8);
            }
            else if os_type == os_android{
            joystick = instance_create(global.joy_x, global.joy_y, obj_op_joystick);
            a_button = instance_create(global.a_x, global.a_y, obj_op_a_button);
            }
            break;
        case 3:
            music_gain = instance_create(global.Window_X-194, 83, obj_op_slider);
            music_gain.index = 0;
            music_gain.value_scale = global.bgm_gain;
            sfx_gain = instance_create(global.Window_X-194, 101, obj_op_slider);
            sfx_gain.value_scale = global.sfx_gain;
            sfx_gain.index = 1;
            break;
            
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_font(global.text_font);
switch(obj_main_menu_controller.op_category){
    case 0:
        //Graphics
        draw_sprite(spr_op_general, 0, 13, 45);
        if os_type == os_windows draw_text(13, 75, "Full screen");
        else if os_type == os_android draw_text(13, 75, "Screen adapting");
        draw_text(13, 93, "V-Sync");
        draw_sprite(spr_op_experimental, 0, 13, 126);
        draw_text(13, 156, "Show FPS");
        break;
    case 1:
        //Visual
        draw_sprite(spr_op_general, 0, 13, 45);
        draw_text(13, 75, "HUD Design");
        draw_text(13, 93, "Camera Mode");
        draw_sprite(spr_op_shaders, 0, 13, 126);
        draw_text(13, 156, "Motorola Zone");
        break;
    case 2:
        //Controls
        if os_type == os_windows{
        //PC
        draw_sprite(spr_op_keyboard, 0, 13, 45);
        draw_text(98, 75, "UP");
        draw_text(98, 93, "DOWN");
        draw_text(98, 111, "LEFT");
        draw_text(98, 129, "RIGHT");
        draw_text(300, 75, "JUMP");
        draw_text(300, 93, "BACK");
        draw_text(300, 111, "DELETE");
        draw_text(300, 129, "START");
        }
        else if os_type == os_android{
        //Android
        draw_set_halign(fa_center);
        draw_text(global.Window_X/2, 45, "Drag the buttons to set their positions");
        draw_set_halign(fa_left);
        }
        break;
    case 3:
        //Sound
        draw_sprite(spr_op_general, 0, 13, 45);
        draw_text(13, 75, "Music");
        draw_text(13, 93, "SFX");
        draw_set_halign(fa_right)
        draw_text(global.Window_X-14, 75, string(round(global.bgm_gain*100))+"%");
        draw_text(global.Window_X-14, 93, string(round(global.sfx_gain*100))+"%");
        draw_set_halign(fa_left)
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
