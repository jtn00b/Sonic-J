<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw on view 0
if view_current == 0
{
    draw_set_alpha(1);
    draw_sprite(spr_ji_sky_2, 0, view_xview[0], lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    
    
    _x = view_xview[0] -(((view_xview[0])*(1.05-1)) mod sprite_get_width(spr_ji_5));
    draw_sprite(spr_ji_5, 0, _x, lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    draw_sprite(spr_ji_5, 0, _x+sprite_get_width(spr_ji_5), lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    
    _x = view_xview[0] -(((view_xview[0])*(1.1-1)) mod sprite_get_width(spr_ji_4));
    draw_sprite(spr_ji_4, 0, _x, lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    draw_sprite(spr_ji_4, 0, _x+sprite_get_width(spr_ji_4), lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    
    _x = view_xview[0] -(((view_xview[0])*(1.15-1)) mod sprite_get_width(spr_ji_3));
    draw_sprite(spr_ji_3, 0, _x, lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    draw_sprite(spr_ji_3, 0, _x+sprite_get_width(spr_ji_3), lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    
    _x = view_xview[0] -(((view_xview[0])*(1.2-1)) mod sprite_get_width(spr_ji_2));
    draw_sprite(spr_ji_2, 0, _x, lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    draw_sprite(spr_ji_2, 0, _x+sprite_get_width(spr_ji_2), lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    
    _x = view_xview[0] -(((view_xview[0])*(1.3-1)) mod sprite_get_width(spr_ji_1));
    draw_sprite(spr_ji_1, 0, _x, lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
    draw_sprite(spr_ji_1, 0, _x+sprite_get_width(spr_ji_1), lerp(0, room_height - 500, (view_yview[0]/(room_height-view_hview[0]))));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
