<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup variables
if os_type != os_android{
    instance_destroy();
    exit;
}
fadein = false;
fadeout = false;
display_set_gui_size(view_wview[0], view_hview[0]);
/*key_u = virtual_key_add(64-(64-52), 104, 32*0.75, 64, vk_up);
key_d = virtual_key_add(64-(64-52), 188, 32*0.75, 64, vk_down);
key_l = virtual_key_add(64-76, 158, 64, 42, vk_left);
key_r = virtual_key_add(64-(64-76), 158, 64, 42, vk_right);*/
left = 0;
right = 0;
up = 0;
down = 0;
key_a = virtual_key_add(global.a_x-27, global.a_y-27, 54, 54, global.key_a);
_device = -1;
_x = 0;
_y = 0;
joystick_active = false;
pressed = false;
if instance_exists(obj_titlecard_controller){
    alpha = 0;
    alarm[0] = 260;
} else alpha = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadein = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Joystick
for(i=0; i&lt;5; i++){
    if device_mouse_check_button_pressed(i, mb_left) &amp;&amp; point_distance(view_xview[0]+global.joy_x, view_yview[0]+global.joy_y, device_mouse_x(i), device_mouse_y(i)) &lt; 60{
        pressed = true;
        _device = i;
        break;
    }
}
if pressed{
    temp_dir = point_direction(view_xview[0]+global.joy_x, view_yview[0]+global.joy_y, device_mouse_x(_device), device_mouse_y(_device));
    
    joystick_active = true;
    _x = device_mouse_x(_device)-(view_xview[0]+global.joy_x);
    _y = device_mouse_y(_device)-(view_yview[0]+global.joy_y);
    
    if joystick_active &amp;&amp; point_distance(view_xview[0]+global.joy_x, view_yview[0]+global.joy_y, device_mouse_x(_device), device_mouse_y(_device)) &gt; 8{
        _x = lengthdir_x(8, temp_dir);
        _y = lengthdir_y(8, temp_dir);
        right = (temp_dir &gt; 315 || temp_dir &lt;= 45);
        up = (temp_dir &gt; 45 &amp;&amp; temp_dir &lt;= 135);
        left = (temp_dir &gt; 135 &amp;&amp; temp_dir &lt;= 225);
        down = (temp_dir &gt; 225 &amp;&amp; temp_dir &lt;= 315);
    }else{
        right = 0;
        up = 0;
        left = 0;
        down = 0;
    }
}
else
{
    joystick_acitve = false;
    _x = 0;
    _y = 0;
}

if device_mouse_check_button_released(_device, mb_left) &amp;&amp; pressed{
    right = 0;
    up = 0;
    left = 0;
    down = 0;
    pressed = false;
    joystick_active = false;
    _device = -1;
    _x = 0;
    _y = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fadein{
    alpha += 0.1;
    if alpha &gt;= 1 fadein = false;
}if fadeout{
    alpha -= 0.1;
    if alpha &lt;= 0 fadeout = false;
}

a = keyboard_check(global.key_a) || gamepad_button_check(0, gp_face1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Buttons
display_set_gui_size(view_wview[0], view_hview[0]);
draw_sprite_ext(spr_analog, 0, global.joy_x, global.joy_y, 1, 1, 0, c_white, alpha);
if right draw_sprite_ext(spr_analog, 2, global.joy_x, global.joy_y, 1, 1, 0, c_white, alpha);
if up draw_sprite_ext(spr_analog, 3, global.joy_x, global.joy_y, 1, 1, 0, c_white, alpha);
if left draw_sprite_ext(spr_analog, 4, global.joy_x, global.joy_y, 1, 1, 0, c_white, alpha);
if down draw_sprite_ext(spr_analog, 5, global.joy_x, global.joy_y, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_analog, 1, global.joy_x+round(_x), global.joy_y+round(_y), 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_jump_button, a, global.a_x, global.a_y, 1, 1, 0, c_white, alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
