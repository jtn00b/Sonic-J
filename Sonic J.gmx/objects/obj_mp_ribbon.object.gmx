<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999990</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_x = global.Window_X/2;
_y = global.Window_Y+((sprite_get_height(spr_mp_ribbon_background))/2);
_yy = 0;
_top = 0;
_height = 0;
_exit = false;
alpha = 0;
if os_type == os_android{
    if frac(round(430*global.width_multiplicator)/2) != 0 xscale = round(430*global.width_multiplicator)+1;
    else xscale = round(430*global.width_multiplicator);
}
else{
    xscale = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(obj_mp_controller);
instance_destroy(obj_mp_title);
instance_destroy(obj_mp_text);
instance_destroy(obj_mp_option);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !_exit _y = lerp(_y, global.Window_Y/2, 0.25);
else _y -= 25;
_yy += 0.5;
_yy = _yy mod sprite_get_height(spr_mp_ribbon);
_top = sprite_get_height(spr_mp_ribbon)-_yy;
_height = sprite_get_height(spr_mp_ribbon)-_yy;

if _y &lt; 121 alpha = (_y/121); else if _y &gt; 121 alpha = (242-_y)/121;
alpha = clamp(alpha, 0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(alpha);
draw_set_color(c_white);
draw_rectangle_colour(view_xview[0], view_yview[0], view_xview[0]+global.Window_X, view_yview[0]+global.Window_Y, c_black, c_black, c_black, c_black, false);
draw_set_alpha(1);
draw_set_color(c_white);
draw_sprite_ext(spr_mp_ribbon_background, 0, view_xview[0]+_x, view_yview[0]+_y, xscale, 1, 0, c_white, 1);
draw_sprite_part(spr_mp_ribbon, 0, 0, _top, sprite_get_width(spr_mp_ribbon), sprite_get_height(spr_mp_ribbon), view_xview[0]+_x-(sprite_get_width(spr_mp_ribbon)/2), view_yview[0]+_y-(sprite_get_height(spr_mp_ribbon)/2));
draw_sprite_part(spr_mp_ribbon, 0, 0, 0, sprite_get_width(spr_mp_ribbon), _height, view_xview[0]+_x-(sprite_get_width(spr_mp_ribbon)/2), view_yview[0]+_y-(sprite_get_height(spr_mp_ribbon)/2)+_yy);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
