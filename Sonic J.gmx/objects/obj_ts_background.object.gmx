<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // Setup 3D    
    
    cloudTexY = 0;
    cloudTex = sprite_get_texture(spr_ts_clouds, 0);
    
    oceanTex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    // Move Cloud Texture
    cloudTexY += 0.001;
    if(cloudTexY &gt; 0.5)
        cloudTexY -= 0.5;
    
    oceanTex += 0.1;
    oceanTex = oceanTex mod 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Clouds
    // Draw Clouds
        // Draw Background
        d3d_start();
        d3d_set_culling(false)
        d3d_set_lighting(false);
        draw_set_blend_mode(bm_normal);
        draw_set_color(c_white);
        d3d_set_projection_ortho(0, 0, global.Window_X, global.Window_Y, 0);
        draw_background(bck_ts_background, 0, 0);
        draw_background(bck_ts_background, 430, 0);
        // Set up 3D Perspectve
        d3d_set_projection_ext(0, 0, 0, 0, -310, 2000, 0, -1, 0, 45, (global.Window_X-64)/global.Window_Y, 1, 2000);       
        d3d_set_perspective(true);
        d3d_set_hidden(false);
        // Draw 2 polygons to render a quad.
        d3d_primitive_begin_texture(pr_trianglelist, cloudTex);
        
        d3d_vertex_texture(-1000, -150, 0, 0, cloudTexY);
        d3d_vertex_texture(1000, -150, 0, 1, cloudTexY);
        d3d_vertex_texture(1000, -150, 1600, 1, 0.5+cloudTexY);
        
        d3d_vertex_texture(-1000, -150, 0, 0, cloudTexY);
        d3d_vertex_texture(-1000, -150, 1600, 0, 0.5+cloudTexY);
        d3d_vertex_texture(1000, -150, 1600, 1, 0.5+cloudTexY);
        
        d3d_primitive_end();
        d3d_set_hidden(true);
        d3d_set_perspective(false);
        // Set projection back to 2D
        d3d_set_projection_ortho(0, 0, global.Window_X, global.Window_Y, 0);
        d3d_end();
        draw_sprite(spr_ts_background1, 0, (global.Window_X/2)+215, 133);
        draw_sprite(spr_ts_background2, 1, (global.Window_X/2)-215, 160);
        draw_sprite(spr_ts_background3, oceanTex, (global.Window_X/2)-50, 160);
        draw_sprite(spr_ts_background3, oceanTex, (global.Window_X/2)+75, 160);
        draw_sprite(spr_ts_background2, 0, (global.Window_X/2)-215, 133);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
