<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera Variables

    //Main values
    cam_x = obj_player.x;
    cam_y = obj_player.y;
    target = obj_player;
    center_x = global.Window_X/2
    center_y = global.Window_Y/2
    
    //Margin values
    margin_left = 16;
    margin_right = 0;
    margin_top = 32;
    margin_bottom = 32;
    
    //Bound values
    minimum_x = 0;
    maximum_x = room_width;
    minimum_y = 0;
    maximum_y = room_height;
    if instance_exists(obj_goal_post) maximum_x = obj_goal_post.x+global.Window_X/2;
    
    //Misc values
    shift_x = 0;
    shift_y = 0;
    ground_offset = 64;
    hor_lag = 0;
    ver_lag = 0;
    mode = 0
    xadd = 0;
    pan_forward = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mode 0: Normal Scroll
// Horziontal Movement

if global.camera_old &amp;&amp; instance_exists(obj_player) &amp;&amp; target == obj_player{
        if abs(target.xspd) &gt;= 6 pan_forward = true;
        else if abs(target.xspd) &lt; 3 pan_forward = false;
        
        if pan_forward xadd = lerp(xadd, (90*sign(target.xspd))*(hor_lag = 0), 0.06);
        else xadd = lerp(xadd, 0, 0.06);

}else xadd = 0;

if mode = 0{
    if target.action != 9{
    if (target.x&gt;=cam_x+margin_right-shift_x &amp;&amp; hor_lag = 0 &amp;&amp; cam_x &lt; maximum_x-center_x){
        cam_x=min(cam_x+16,target.x-margin_right+shift_x);
    }
    
    if (target.x&lt;=cam_x-margin_left-shift_x &amp;&amp; hor_lag = 0 &amp;&amp; cam_x &gt; minimum_x+center_x){
        cam_x=max(cam_x-16,target.x+margin_left+shift_x);
    }
    
    
    // Vertical movement
    if (target.landed) {ground_offset = cam_y - target.y}
    
  
    if (target.y&gt;=cam_y+margin_bottom-shift_y-ground_offset  &amp;&amp; ver_lag = 0 &amp;&amp; !target.ground &amp;&amp; cam_y &lt; maximum_y-center_y){
        cam_y=min(cam_y+16,target.y-margin_bottom+shift_y+ground_offset );
    }
    if (target.y&lt;=cam_y-margin_top-shift_y -ground_offset &amp;&amp; ver_lag = 0 &amp;&amp; !target.ground &amp;&amp; cam_y &gt; minimum_y+center_y){
        cam_y=max(cam_y-16,target.y+margin_top+shift_y+ground_offset );
    }
    
    if (target.y&gt;=cam_y+0-shift_y -ground_offset &amp;&amp; ver_lag = 0 &amp;&amp; target.ground &amp;&amp; cam_y &lt; maximum_y-center_y){
        cam_y=min(cam_y+16,target.y-0+shift_y+ground_offset );
    }
    if (target.y&lt;=cam_y+0-shift_y -ground_offset  &amp;&amp; ver_lag = 0 &amp;&amp; target.ground &amp;&amp; cam_y &gt; minimum_y+center_y){
        cam_y=max(cam_y-16,target.y-0+shift_y+ground_offset );
    }
    }
}
else if mode = -1{
    cam_x = target.x;
    cam_y = target.y;
}
    
   
    
    //Camera bounds
    
    if cam_x &lt;= minimum_x+center_x {cam_x = min(cam_x+3,minimum_x+center_x)}
    if cam_x &gt;= maximum_x-center_x {cam_x = max(cam_x-3,maximum_x-center_x)}
    if cam_y &lt;= minimum_y+center_y {cam_y = min(cam_y+3,minimum_y+center_y)}
    if cam_y &gt;= maximum_y-center_y {cam_y = max(cam_y-3,maximum_y-center_y)}
    
    //Ground offset
    
   if ground_offset &lt;=0  {ground_offset = min(ground_offset+6,0)}
   if ground_offset &gt;=0  {ground_offset = max(ground_offset-8,0)}
    
    
    
    //Set position
    x = clamp(floor(cam_x)+round(xadd), minimum_x+center_x, maximum_x-center_x);
    y = floor(cam_y+8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup scrolling object &amp; lag
    
    hor_lag=max(hor_lag-1,0);
    ver_lag=max(ver_lag-1,0);
    
    //=============================================
    
    view_object[view_current]=obj_camera;
    view_hborder[view_current]=999
    view_vborder[view_current]=999
    view_hspeed[view_current]=-1+(17*(mode == -1));
    view_vspeed[view_current]=-1+(17*(mode == -1));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
