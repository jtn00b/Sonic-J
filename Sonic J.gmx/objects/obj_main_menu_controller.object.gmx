<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>confirm = false;
allow_input = true;
option_index = 0;
select_x = 0;
select_y = 0;
square_x = 0;
square_y = 0;
line_x = 173;
line_x_des = 173;
op_category = 0;
prev_category = 0;
flash_timer = 4;
alpha = 1;

if os_type != os_android &amp;&amp; allow_input{
    key_l = -(keyboard_check_pressed(global.key_l) || gamepad_button_check_pressed(0, gp_padl));
    key_r = keyboard_check_pressed(global.key_r) || gamepad_button_check_pressed(0, gp_padr);
    key_u = -(keyboard_check_pressed(global.key_u) || gamepad_button_check_pressed(0, gp_padu));
    key_d = keyboard_check_pressed(global.key_d) || gamepad_button_check_pressed(0, gp_padd);
    key_a = keyboard_check_pressed(global.key_a) || gamepad_button_check_pressed(0, gp_face1);
    key_b = keyboard_check_pressed(global.key_b) || gamepad_button_check_pressed(0, gp_face2);
    key_s = keyboard_check_pressed(global.key_s) || gamepad_button_check_pressed(0, gp_start);
}
else{
    key_l = 0;
    key_r = 0;
    key_u = 0;
    key_d = 0;
    key_a = 0;
    key_b = 0;
    key_s = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if os_type != os_android &amp;&amp; allow_input{
    key_l = -(keyboard_check_pressed(global.key_l) || gamepad_button_check_pressed(0, gp_padl));
    key_r = keyboard_check_pressed(global.key_r) || gamepad_button_check_pressed(0, gp_padr);
    key_u = -(keyboard_check_pressed(global.key_u) || gamepad_button_check_pressed(0, gp_padu));
    key_d = keyboard_check_pressed(global.key_d) || gamepad_button_check_pressed(0, gp_padd);
    key_a = keyboard_check_pressed(global.key_a) || gamepad_button_check_pressed(0, gp_face1);
    key_b = keyboard_check_pressed(global.key_b) || gamepad_button_check_pressed(0, gp_face2);
    key_s = keyboard_check_pressed(global.key_s) || gamepad_button_check_pressed(0, gp_start);
}
else{
    key_l = 0;
    key_r = 0;
    key_u = 0;
    key_d = 0;
    key_a = 0;
    key_b = 0;
    key_s = 0;
}
if ((key_b) || (keyboard_check_pressed(vk_backspace) &amp;&amp; os_type == os_android)) &amp;&amp; allow_input &amp;&amp; room != rm_settings{
    allow_input = false;
    fade = instance_create(0,0,obj_fade);
    fade.trans_type = 2;
    fade.destination = global.previous_room;
    fade.fade_mode = 0;
    fade.color_red = 0;
    fade.color_green = 0;
    fade.color_blue = 0;
}
if room == rm_settings{
    prev_x = select_x;
    prev_y = select_y;
    prev_category = op_category;
    if mouse_check_button_released(mb_left) &amp;&amp; allow_input{
        if point_in_rectangle(mouse_x, mouse_y, 143, 14, 143+60, 14+17){
            op_category = 0;
            select_y = 0;
            select_x = 0;
            line_x_des = 173;
            audio_play_sound(snd_menu_accept, 0, false);
        }
        else if point_in_rectangle(mouse_x, mouse_y, 214, 14, 214+53, 14+17){
            op_category = 1;
            select_y = 0;
            select_x = 1;
            line_x_des = 240;
            audio_play_sound(snd_menu_accept, 0, false);
        }
        else if point_in_rectangle(mouse_x, mouse_y, 277, 14, 277+64, 14+17){
            op_category = 2;
            select_y = 0;
            select_x = 2;
            line_x_des = 309;
            audio_play_sound(snd_menu_accept, 0, false);
        }
        else if point_in_rectangle(mouse_x, mouse_y, 352, 14, 352+40, 14+17){
            op_category = 3;
            select_y = 0;
            select_x = 3;
            line_x_des = 372;
            audio_play_sound(snd_menu_accept, 0, false);
        }
    }
    if (-key_l || key_r || -key_u || key_d) &amp;&amp; allow_input{
        if select_y &gt; 0 &amp;&amp; (-key_u ||key_d){
            if select_y-1 == 0 &amp;&amp; -key_u select_x = op_category;
            select_y += key_u+key_d;
        }
        else if select_y == 0 &amp;&amp; key_d{
            select_x = 0;
            select_y += 1;
        }
        if select_x &gt; 0 &amp;&amp; (-key_l ||key_r) select_x += key_l+key_r;
        else if select_x == 0 &amp;&amp; key_r select_x += 1;
        if select_y &gt; 0 select_x = min(select_x, 1);
        else select_x = min(select_x, 3);
        
        switch op_category{
            case 0:
            case 1:
                select_y = min(select_y, 4);
                break;
            case 2:
                select_y =  min(select_y, 5);
                break;
            case 3:
                select_y =  min(select_y, 3);
                break;
        }
        if select_y == 0{
            op_category = select_x;
        }else if op_category ==3 &amp;&amp; select_y != 3{
            select_x = 0;
        }else if op_category == 3 &amp;&amp; select_y == 3{
            select_x = min(select_x, 1);
        }
        if prev_x != select_x || prev_y != select_y audio_play_sound(snd_beep, 0, false);
    }
    switch(op_category){
        case 0:
            line_x_des = 173;
            break;
        case 1:
            line_x_des = 240;
            break;
        case 2:
            line_x_des = 309;
            break;
        case 3:
            line_x_des = 372;
            break;
    }
    line_x = lerp(line_x, line_x_des, 0.25);
}
if (-key_l || key_r) &amp;&amp; (instance_exists(obj_main_menu_option) || instance_exists(obj_ls_option)) &amp;&amp; allow_input{
    audio_play_sound(snd_menu_select, 0, false);
    option_index += key_l+key_r;
    switch room{
        case rm_main_menu:
            if option_index &gt; 3 option_index = 0;
            if option_index &lt; 0 option_index = 3;
            break;
        case rm_level_select:
            if option_index &gt; 2 option_index = 0;
            if option_index &lt; 0 option_index = 2;
            break;
    }
}
if os_type != os_android &amp;&amp; room != rm_settings{
    if square_x != select_x square_x = lerp(square_x, select_x, 0.25);
    if square_y != select_y square_y = lerp(square_y, select_y, 0.25);
    
    flash_timer -= 1;
    if flash_timer == 0{
        if alpha == 0 {alpha = 1; flash_timer = 6;}
        else {alpha = 0; flash_timer = 2;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch room{
    case rm_main_menu:
        draw_sprite(spr_main_menu_text, 0, global.Window_X/2, 22);
        draw_set_alpha(alpha);
        if os_type != os_android draw_sprite(spr_menu_select, 0, square_x-1, square_y-1);
        break;
    case rm_level_select:
        draw_sprite(spr_ls_text, 0, global.Window_X/2, 22);
        draw_set_alpha(alpha);
        if os_type != os_android draw_sprite(spr_ls_select, 0, square_x-1, square_y-1);
        break;
    case rm_settings:
        draw_sprite(spr_options_text, 0, 68, 22);
        if select_y == 0 draw_sprite(spr_op_line, op_category, line_x, 13);
}
if confirm{
    draw_rectangle_colour(0, 0, room_width, room_height, c_black, c_black, c_black, c_black, false);
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
