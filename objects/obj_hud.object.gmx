<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>handle = noone;
global.gametime = 0;
global.gametimes = 0;
global.gametimem = 0;
global.gametilems = 0;
rings_red = false;
rings_red_timer = 7;
powerups = array_create(6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Timer
if !(instance_exists(obj_titlecard_controller) &amp;&amp; (instance_exists(obj_fade) &amp;&amp; !obj_fade.fade)) &amp;&amp; !(instance_exists(obj_goal_post) &amp;&amp; obj_goal_post.goal) global.gametime += 1000/60;
global.gametimems = floor(global.gametime / 10) % 100;
global.gametimes = floor(global.gametime / 1000) % 60;
global.gametimem = floor(global.gametime / 60000) % 11;

//Flash when having no rings
if global.player_rings &lt;= 0{
    rings_red_timer -= 1;
    if rings_red_timer &lt;= 0{
        if !rings_red rings_red = true;
        else rings_red = false;
        rings_red_timer = 7;
    }
}
else {rings_red = false; rings_red_timer = 7;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(global.Window_X, global.Window_Y);
draw_set_font(global.text_font_gold);
draw_set_color(c_white);
draw_set_halign(fa_right);
if global.show_fps{
    if os_type == os_android{
        draw_text(global.Window_X-45, 8, "FPS "+string(fps)+"/60");
    }
    else if os_type == os_windows{
        draw_text(global.Window_X-16, 8, "FPS "+string(fps)+"/60");
    }
}
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw HUD.
if global.hud_new{
// Draw HUD Parts:
    draw_sprite_part(spr_hud, 0, 0, 0, sprite_get_width(spr_hud), sprite_get_height(spr_hud)-16, view_xview, view_yview+8);
    if !handle.hyper_ring draw_sprite_part_ext(spr_hud, 0, 0, 36, sprite_get_width(spr_hud), 15, view_xview, view_yview+44, 1, 1, c_white, 1-rings_red);
    else draw_sprite_part_ext(spr_hud, 1, 0, 36, sprite_get_width(spr_hud), 15, view_xview, view_yview+44, 1, 1, c_white, 1-rings_red);
    
// Draw Number
    //Setup it first
    draw_set_font(global.text_font);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    
    //Draw Score
    if !global.Demo draw_text(view_xview[0]+28, view_yview[0]+10, string(global.Score));
    else draw_text(view_xview[0]+28, view_yview[0]+10, string(handle.demo_score));
    
    //Draw Time
    scr_drawnumberzero(view_xview+74,view_yview+28,global.gametimems,2);
    scr_drawnumberzero(view_xview+51,view_yview+28,global.gametimes,2);
    scr_drawnumberzero(view_xview+28,view_yview+28,global.gametimem,2);
    
    //Draw Rings
    draw_set_alpha(1-rings_red);
    if handle!=noone draw_text(view_xview+28,view_yview+46,global.player_rings);
    else draw_text(view_xview+28,view_yview+28,0);
    draw_set_alpha(1);
}else{
// Draw HUD Parts:
    draw_sprite(spr_str, 0, view_xview+16, view_yview+9);
    draw_sprite_part_ext(spr_str, 1, 0, 32, sprite_get_width(spr_str), 49-32, view_xview+16, view_yview+41, 1, 1, c_white, rings_red);
    draw_set_alpha(handle.hyper_ring);
    draw_sprite(spr_hyper_ring_hud, 0, view_xview+94-8*max(floor(log10(global.player_rings)), 0), view_yview+41);
    draw_set_alpha(1);
    
// Draw Number (test)
    //Setup it first
    draw_set_font(global.text_font);
    draw_set_halign(fa_right);
    
    //Draw Score
    if !global.Demo draw_text(view_xview+117,view_yview+9,global.Score);
    else draw_text(view_xview+117,view_yview+9,handle.demo_score);
    
    //Draw Time
    scr_drawnumberzero(view_xview+117,view_yview+25,global.gametimems,2);
    scr_drawnumberzero(view_xview+93,view_yview+25,global.gametimes,2);
    draw_text(view_xview+69,view_yview+25,global.gametimem)
    
    //Draw Rings
    if handle.hyper_ring draw_set_font(global.text_font_blue) else draw_set_font(global.text_font);
    if handle!=noone draw_text(view_xview+117,view_yview+41,global.player_rings);
    else draw_text(view_xview+117,view_yview+41,0);
}
draw_set_halign(fa_left);
draw_set_valign(fa_top);

//Draw powerup/shield icons
if handle.object_index == obj_player{
    for(i=0;i&lt;array_length_1d(powerups);i++){
        switch(powerups[i]){
            case "electric":
                draw_sprite(spr_sh_electric_icon, 0, view_xview+10+(6*!global.hud_new)+(28*i)+sprite_get_xoffset(spr_sh_electric_icon), view_yview+64+sprite_get_yoffset(spr_sh_electric_icon));
                break;
            case "fire":
                draw_sprite(spr_sh_fire_icon, 0, view_xview+10+(6*!global.hud_new)+(28*i)+sprite_get_xoffset(spr_sh_fire_icon), view_yview+64+sprite_get_yoffset(spr_sh_electric_icon));
                break;
            case "bubble":
                draw_sprite(spr_sh_bubble_icon, 0, view_xview+10+(6*!global.hud_new)+(28*i)+sprite_get_xoffset(spr_sh_bubble_icon), view_yview+64+sprite_get_yoffset(spr_sh_bubble_icon));
                break;
            case "regular":
                draw_sprite(spr_sh_regular_icon, 0, view_xview+10+(6*!global.hud_new)+(28*i)+sprite_get_xoffset(spr_sh_regular_icon), view_yview+64+sprite_get_yoffset(spr_sh_regular_icon));
                break;
            case "speed":
                draw_set_alpha(!(handle.super_speed_timer &lt;= 300 &amp;&amp; handle.super_speed_timer%4&lt;=1))
                draw_sprite(spr_speed_shoe_icon, 0, view_xview+10+(6*!global.hud_new)+(28*i)+sprite_get_xoffset(spr_speed_shoe_icon), view_yview+64+sprite_get_yoffset(spr_speed_shoe_icon));
                draw_set_alpha(1);
                break;
            case "invincible":
                draw_set_alpha(!(handle.invincible_timer &lt;= 300 &amp;&amp; handle.invincible_timer%4&lt;=1))
                draw_sprite(spr_inv_icon, 0, view_xview+10+(6*!global.hud_new)+(28*i)+sprite_get_xoffset(spr_inv_icon), view_yview+64+sprite_get_yoffset(spr_inv_icon));
                draw_set_alpha(1);
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
