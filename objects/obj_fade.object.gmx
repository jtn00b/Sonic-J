<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999998</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.
     trans_type          = 0;  //0 is move to the next room. 1 is restart the room. 2 is move to a specific room.
     fade_mode           = 1;  //0 is fade in. 1 is fade out.
     fade_speed          = 20; //fading speed.
     image_alpha         = 1;    
     color               = c_black;
     color_red           = 255;
     color_green         = 255;
     color_blue          = 255;
     fade                = true;
     trans_timer         = 1;
     timer_started       = false;
     destination         = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch trans_type{
    default:
    case 0:
        shader_reset();
        room_goto_next();
        break;
    case 1:
        room_restart();
        break;
    case 2:
        shader_reset();
        if room != destination scr_reset_checkpoints();
        room_goto(destination);
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fade = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Limit Colors.
    
    if(color_red &gt; 255){
       color_red = 255;
    }
    if(color_red &lt; 0){
       color_red = 0;
    }       
    if(color_green &gt; 255){
       color_green = 255;
    }
    if(color_green &lt; 0){
       color_green = 0;
    }      
    if(color_blue &gt; 255){
       color_blue = 255;
    }
    if(color_blue &lt; 0){
       color_blue = 0;
    }   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Colors.

if fade switch fade_mode{
    default:
    case 1:
        // Blue: 
        if(color_blue &gt; 0)
        {
            color_blue -= fade_speed;
        }
            
        // Green:
        if(color_green &gt; 0 &amp;&amp; color_blue &lt; 170)
        {
            color_green -= fade_speed;
        }
         
        // Red:
        if(color_red &gt; 0 &amp;&amp; color_green &lt; 170)
        {
            color_red -= fade_speed;
        }
        else if(color_red == 0)
        {
            instance_destroy();
        }
        break;
    case 0:
        // Red: 
        if(color_red &lt; 255)
        {
        color_red += fade_speed;
        }
            
        // Green:
        if(color_green &lt; 255 &amp;&amp; color_red &gt; 170)
        {
            color_green += fade_speed;
        }
         
        // Blue:
        if(color_blue &lt; 255 &amp;&amp; color_green &gt; 170)
        {
            color_blue += fade_speed;
        }
        else if(color_blue &gt;= 255) &amp;&amp; !timer_started
        {
            alarm[1] = trans_timer;
            timer_started = true;
        }
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the Fade.

    draw_set_alpha(1)
    if(color = c_black)
    {
        draw_set_blend_mode(bm_subtract)
    }
    else
    {
        draw_set_blend_mode(bm_add)
    }
    draw_set_color(make_color_rgb(color_red, color_green, color_blue))
    draw_rectangle(view_xview, view_yview, view_xview+view_wview, view_yview+view_hview, false)
    draw_set_blend_mode(bm_normal)
    draw_set_alpha(image_alpha)
    draw_set_blend_mode(bm_normal)
    draw_set_alpha(1)
    draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
