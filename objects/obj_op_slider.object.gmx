<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_op_button2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_op_option_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>index = 0;
selected = 0;
value_scale = 0;
pressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if os_type == os_windows switch index{
    case 0:
        selected = obj_main_menu_controller.select_y == 1;
        break;
    case 1:
        selected = obj_main_menu_controller.select_y == 2;
        break;
}

key_l = -((keyboard_check_pressed(global.key_l) || gamepad_button_check_pressed(0, gp_padl) || (gamepad_axis_value(0, gp_axislh) &lt; -0.5)) &amp;&amp; obj_main_menu_controller.allow_input);
key_r = (keyboard_check_pressed(global.key_r) || gamepad_button_check_pressed(0, gp_padr) || (gamepad_axis_value(0, gp_axislh) &gt; 0.5)) &amp;&amp; obj_main_menu_controller.allow_input;

if mouse_check_button_pressed(mb_left) &amp;&amp; obj_main_menu_controller.allow_input &amp;&amp; (position_meeting(mouse_x, mouse_y, self) || point_in_rectangle(mouse_x, mouse_y, x+(value_scale*140)-5, y-9, x+(value_scale*140)+5, y+9)) pressed = true;
if (mouse_check_button_released(mb_left) || !mouse_check_button(mb_left)) &amp;&amp; pressed {pressed = false; obj_main_menu_controller.allow_input = true; if os_type == os_android selected = false;}

if (-key_l || key_r) &amp;&amp; selected &amp;&amp; !pressed &amp;&amp; os_type == os_windows{
    audio_play_sound(snd_beep, 0, false);
    value_scale += (key_l+key_r)*0.01;
    value_scale = clamp(value_scale, 0, 1);
    if index == 0 audio_group_set_gain(ad_bgm, value_scale, 0);
    else if index == 1 audio_group_set_gain(audiogroup_default, value_scale, 0);
}

if pressed{
    selected = true;
    if os_type == os_windows obj_main_menu_controller.select_y = index+1;
    value_scale = clamp(-(x-mouse_x)*0.007, 0, 1); 
    if index == 0 audio_group_set_gain(ad_bgm, value_scale, 0);
    else if index == 1 audio_group_set_gain(audiogroup_default, value_scale, 0);
    obj_main_menu_controller.allow_input = false;
}

if index == 0 global.bgm_gain = value_scale;
else if index == 1 global.sfx_gain = value_scale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_op_button2, 0, x, y);
draw_sprite_ext(spr_op_button2, 1, x, y, value_scale, 1, 0, c_white, 1);
draw_sprite(spr_op_slider, selected, x+(value_scale*140), y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
